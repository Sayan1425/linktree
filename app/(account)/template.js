import { Lato } from "next/font/google";
import Image from "next/image";
import { Toaster } from "react-hot-toast";
import { redirect } from "next/navigation";
import AppSidebar from "../components/layout/AppSidebar";
import { Page } from "../models/Page";
import mongoose from "mongoose";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import { faBurger, faLink, faXmark } from "@fortawesome/free-solid-svg-icons";
import Link from "next/link";
import { cookies } from "next/headers";
import jwt from "jsonwebtoken";
import { User } from "../models/User";

const lato = Lato({ subsets: ["latin"], weight: ["400", "700"] });

export const metadata = {
  title: "LinkTree",
  description: "Generated by create next app",
};

export default async function AppTemplate({ children }) {
  const cookieStore = await cookies();
  const token = cookieStore.get("authToken")?.value;

  if (!token) {
    return redirect("/");
  }

  let user;
  let page;
  try {
    const decoded = jwt.verify(token, process.env.JWT_SECRET);
    if (!decoded?.email) {
      return redirect("/");
    }
    await mongoose.connect(process.env.MONGODB_URI);
    const userDoc = await User.findOne({ email: decoded.email });
    user = { email: decoded.email, name: decoded.name, image: userDoc?.image };
    page = await Page.findOne({ owner: user.email });
  } catch (err) {
    console.error("JWT decode error:", err);
    return redirect("/");
  }

  return (
    <div className={`${lato.className} min-h-screen flex`}>
      <Toaster />
      <input type="checkbox" id="navCb" className="hidden peer" />
      <label
        htmlFor="navCb"
        className="fixed inset-0 bg-black/70 z-10 hidden peer-checked:block md:hidden"
      ></label>

      <aside
        className="bg-white md:w-56 p-4 shadow fixed -left-48 top-0 bottom-0 z-20
        transition-all duration-300 ease-in-out peer-checked:left-0 md:static md:left-0"
      >
        <label
          htmlFor="navCb"
          className="absolute top-2 right-2 p-1 shadow-md shadow-black/10 cursor-pointer md:hidden"
        >
          <FontAwesomeIcon icon={faXmark} className="w-6 h-6 font-semibold text-lg" />
        </label>
        <div className="sticky top-14 pt-8 md:pt-2 flex justify-center flex-col">
          <div className="rounded-full overflow-hidden aspect-square mx-auto size-24">
            <Image
              src={user?.image}
              alt="avatar"
              width={256}
              height={256}
              priority
            />
          </div>
          {page && (
            <Link
              target="_blank"
              href={"/" + page.uri}
              className="flex items-center justify-center text-center mt-4 gap-1 hover:font-semibold hover:text-blue-600"
            >
              <FontAwesomeIcon icon={faLink} size="lg" className="text-blue-500" />
              <span className="text-2xl">/</span>
              <span className=" shadow-md px-2 py-1 text-lg">{page.uri}</span>
            </Link>
          )}
          <div className="text-center mt-2">
            <AppSidebar />
          </div>
        </div>
      </aside>

      <main className="w-full">
        <div className="pl-8 pr-8 pb-4">
          <label
            htmlFor="navCb"
            className="inline-flex items-center md:hidden gap-1 py-2 px-2 mt-4 mb-4 rounded-md bg-white shadow cursor-pointer text-xl hover:font-semibold"
          >
            <FontAwesomeIcon icon={faBurger} />
            Menu
          </label>
          {children}
        </div>
      </main>
    </div>
  );
}